[project]
name = "OMR - Archivio Ricordi"
version = ""
description = ""
authors = [
    {name = "Federico Simonetta", email = "federico.simonetta@gssi.it"},
]
dependencies = [
    "torchvision>=0.18.0",
    "pandas>=2.2.2",
    "krippendorff>=0.6.1",
    "seaborn>=0.13.2",
    "matplotlib>=3.8.4",
    "pillow>=10.3.0",
    "torchmetrics>=1.3.2",
    "opencv-python>=4.9.0.80",
    "papermill>=2.6.0",
    "scikit-image>=0.19.1",
    "joblib>=1.1.0",
    "toml>=0.10.2",
    "scikit-learn>=1.0.2",
    "tqdm>=4.62.3",
    "flask>=2.0.2",
    "waitress>=2.0.0",
    "plotly>=5.6.0",
    "notebook>=7.1.3",
]
requires-python = ">=3.9,<3.13"
license = {text = "MIT"}

[tool]

[tool.pdm]
distribution = false

[tool.pdm.options]
install = ["--no-self"]
add = ["--no-isolation", "--no-self"]

[tool.pdm.scripts]
preprocess = {call = "omr.preprocess:main('config.toml')"}
data_entry = {call = "omr.server:run()"}
data_entry_debug = { cmd = "flask run -p 2022", env = { FLASK_APP="omr.server", FLASK_ENV="development" } }
check_blob_jsons = {call = "omr.check:check_blob_jsons()"}
plot_normal_indices = {call = "omr.check:plot_normal_indices()"}
dataset_analysis = "papermill Confusion_Matrix_Annotation.ipynb Confusion_Matrix_Annotation_result.ipynb"
dataset_creation = "papermill Create_Dataset.ipynb Create_Dataset_result.ipynb"
binary = "papermill ./OMR_Binary.ipynb ./OMR_Binary_result.ipynb"
multiclass = "papermill ./OMR_Multiclass.ipynb ./OMR_Multiclass_result.ipynb"

[tool.pdm.dev-dependencies]
ipython = [
    "ipdb>=0.13.9",
]

[build-system]
requires = ["pdm-pep517"]
build-backend = "pdm.pep517.api"
